const qrCodeRegionId = "reader";
const sheetURL = "https://script.google.com/macros/s/AKfycbx04-GtmrMIZAZI2E3g5i26F6x2yla5HW9SStqLavz_8rAUP6nuAgB08F42o792xE65MQ/exec";
const beepSound = document.getElementById("beep");
const readerEl = document.getElementById("reader");

let html5QrCode;// Bi·∫øn to√†n c·ª•c ƒë·ªÉ l∆∞u tr·ªØ ƒë·ªëi t∆∞·ª£ng Html5Qrcode tr√°nh ƒë·ªÉ b√™n trong h√†m srtScanner() th√†nh bi·∫øn c·ª•c b·ªô, d√πng l·∫°i khi c·∫ßn thi·∫øt


function onScanSuccess(decodedText, decodedResult) {
  document.getElementById("qrText").innerText = decodedText;
  document.getElementById("status").innerText = "üì§ ƒêang g·ª≠i d·ªØ li·ªáu...";
  
    // üîä Ph√°t ti·∫øng b√≠p
    beepSound.play();

    // Hi·ªán vi·ªÅn ƒë·ªè
    readerEl.classList.add("qr-highlight");

      // üõë D·ª´ng qu√©t ngay
    html5QrCode.pause();

  fetch(sheetURL, {
    method: "POST",
    body: new URLSearchParams({ data: decodedText })
  })
  .then(res => res.text())
  .then(result => {
    document.getElementById("status").innerText = "‚úÖ ƒê√£ g·ª≠i: " + decodedText;

    // üïí T·∫°m d·ª´ng qu√©t trong 1 gi√¢y
    setTimeout(() => {
      readerEl.classList.remove("qr-highlight");
      html5QrCode.resume();
      document.getElementById("status").innerText = "‚è≥ ƒêang ch·ªù qu√©t...";
    }, 100);
  })
  .catch(error => {
    document.getElementById("status").innerText = "‚ùå L·ªói g·ª≠i d·ªØ li·ªáu!";
    console.error("L·ªói:", error);
  });
}



function startScanner(){
  document.getElementById("reader").style.display = "block"; //l·∫•y ph·∫ßn t·ª≠ c√≥ id l√† reader thay ƒë·ªïi thu·ªôc t√≠nh display th√†nh block

  html5QrCode = new Html5Qrcode(qrCodeRegionId); // b·ªè "const" html5QrCode = new Html5Qrcode(qrCodeRegionId); n·∫øu mu·ªën s·ª≠ d·ª•ng bi·∫øn to√†n c·ª•c
html5QrCode.start(
  { facingMode: "environment" },
  { fps: 20,
    //qrbox: { width: 300, height: 200 }//khung qu√©t QR
    qrbox: function(viewfinderWidth, viewfinderHeight) {
      const minEdge = Math.min(viewfinderWidth, viewfinderHeight);
      const size = minEdge * 0.75;
      return { width: size, height: size };
    }
    
  },
  onScanSuccess
);
}



