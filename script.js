const qrCodeRegionId = "reader";
const sheetURL = "https://script.google.com/macros/s/AKfycbx04-GtmrMIZAZI2E3g5i26F6x2yla5HW9SStqLavz_8rAUP6nuAgB08F42o792xE65MQ/exec";
const beepSound = document.getElementById("beep");
const readerEl = document.getElementById("reader");


let lastScannedText = "";
let lastScannedTime = 0;
const dedupCooldown = 2500; // 5 gi√¢y: kh√¥ng qu√©t l·∫°i c√πng m√£

let html5QrCode;
let isCooldown = false;        // ‚è± D·ª´ng 1s gi·ªØa c√°c l·∫ßn qu√©t
let queue = [];
let isSending = false;

function onScanSuccess(decodedText) {

  const now = Date.now();

  // ‚ùå B·ªè qua n·∫øu m√£ tr√πng trong th·ªùi gian g·∫ßn ƒë√¢y
  if (decodedText === lastScannedText && (now - lastScannedTime < dedupCooldown)) {
    console.log("‚õî Tr√πng m√£, b·ªè qua:", decodedText);
    return;
  }

  // ‚úÖ C·∫≠p nh·∫≠t m√£ g·∫ßn nh·∫•t
  lastScannedText = decodedText;
  lastScannedTime = now;

  if (isCooldown) return;

  isCooldown = true; // ‚õî T·∫°m d·ª´ng qu√©t ti·∫øp
  setTimeout(() => {
    isCooldown = false; // ‚úÖ Sau 1s m·ªõi qu√©t l·∫°i ƒë∆∞·ª£c
  }, 1000);



  // üîä B√≠p + vi·ªÅn
  beepSound.play();
  readerEl.classList.add("qr-highlight");
  setTimeout(() => readerEl.classList.remove("qr-highlight"), 800);

  // üìå Hi·ªÉn th·ªã n·ªôi dung
  document.getElementById("qrText").innerText = decodedText;
  document.getElementById("status").innerText = "üì§ ƒêang g·ª≠i d·ªØ li·ªáu...";

  // üß† ƒê∆∞a v√†o h√†ng ƒë·ª£i
  queue.push(decodedText);
  saveQueue();
  processQueue();
}

function saveQueue() {
  localStorage.setItem("qrQueue", JSON.stringify(queue));
}

function processQueue() {
  if (isSending || queue.length === 0) return;

  isSending = true;
  const data = queue[0];

  fetch(sheetURL, {
    method: "POST",
    body: new URLSearchParams({ data: data })
  })
    .then((res) => res.text())
    .then((result) => {
      document.getElementById("status").innerText = "‚úÖ ƒê√£ g·ª≠i: " + data;
      queue.shift();
      saveQueue();
      isSending = false;
      processQueue(); // Ti·∫øp t·ª•c g·ª≠i n·∫øu c√≤n
    })
    .catch((err) => {
      console.error("‚ùå L·ªói g·ª≠i:", err);
      document.getElementById("status").innerText = "‚ùå G·ª≠i l·ªói, s·∫Ω th·ª≠ l·∫°i...";
      isSending = false;
      setTimeout(processQueue, 2000); // Th·ª≠ l·∫°i sau 2s
    });
}

function startScanner() {
  document.getElementById("reader").style.display = "block";

  html5QrCode = new Html5Qrcode(qrCodeRegionId);
  html5QrCode.start(
    { facingMode: "environment" },
    {
      fps: 20,
      qrbox: function (viewfinderWidth, viewfinderHeight) {
        const minEdge = Math.min(viewfinderWidth, viewfinderHeight);
        const size = minEdge * 0.75;
        return { width: size, height: size };
      }
    },
    onScanSuccess
  );
}

// üîÑ T·∫£i l·∫°i h√†ng ƒë·ª£i n·∫øu c√≥
window.addEventListener("load", () => {
  try {
    const saved = JSON.parse(localStorage.getItem("qrQueue") || "[]");
    if (saved.length > 0) {
      queue.push(...saved);
      processQueue();
    }
  } catch (e) {
    console.warn("Kh√¥ng th·ªÉ load queue:", e);
  }
});
